# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.3'

    - name: Lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61
        args: -v --timeout 5m
        skip-cache: true

    - name: vet
      run:
        make vet

    - name: fmt
      run:
        test -z "$(go fmt ./...)"

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.3'

    - name: Test
      run: go test -v -coverpkg=./... -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.out
        fail_ci_if_error: false
        verbose: true

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.3'

    - name: Install Protoc
      run: |
        PROTOC_ZIP=protoc-28.2-linux-x86_64.zip
        curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v28.2/$PROTOC_ZIP
        sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
        sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
        rm -f $PROTOC_ZIP

    - name: Verify Protoc Version
      run: protoc --version

    - name: Build
      run: |
        make init-proto
        make build
