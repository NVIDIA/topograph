# Default values for topology-generator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # provider: "aws", "oci", "gcp", "nebius", "baremetal" or "test".
  provider: "test"
  #  engine: "k8s" or "slinky"
  engine: "k8s"
  # engineParams:

  service:
    type: ClusterIP
    port: 49021

replicaCount: 1

image:
  repository: ghcr.io/nvidia/topograph
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: main

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

verbosity: 3

env: {}

config:
  request_aggregation_delay: 15s
  # Optional secret with CSP credentials
  # credentials_secret:

topologyNodeLabels:
  accelerator: "network.topology.nvidia.com/accelerator"
  block: "network.topology.nvidia.com/block"
  spine: "network.topology.nvidia.com/spine"
  datacenter: "network.topology.nvidia.com/datacenter"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http

nodeSelector: {}

tolerations:
  - operator: Exists

affinity: {}

node-observer:
  image:
    repository: ghcr.io/nvidia/topograph
    pullPolicy: IfNotPresent
    tag: main
  verbosity: 3
  topograph:
    trigger:
      node_labels: {}

node-data-broker:
  image:
    repository: curlimages/curl
    pullPolicy: IfNotPresent
    tag: 8.13.0
  initc:
    enabled: true
    image:
      repository: ghcr.io/nvidia/topograph
      pullPolicy: IfNotPresent
      tag: main
  verbosity: 3
